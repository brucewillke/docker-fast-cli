name: Build and Publish Docker

on:
  push:
    branches:
      - main
    paths:
      - 'Dockerfile'
      - 'Dockerfile-alpine'
  pull_request:
    branches:
      - main
    paths:
      - 'Dockerfile'
      - 'Dockerfile-alpine'
  schedule:
    - cron: '0 0 * * 0'  # Every Sunday at midnight UTC
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for manually triggering this build'
        required: false

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        name: [ubuntu, alpine]

    env:
      DOCKER_REPO: brucewillke/docker-fast-cli

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.name }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.name }}-

      - name: Set image metadata
        id: meta
        run: |
          if [ "${{ matrix.name }}" = "ubuntu" ]; then
            echo "dockerfile=Dockerfile" >> $GITHUB_OUTPUT
            echo "test_cmd=fast --version" >> $GITHUB_OUTPUT
            echo "tags=ubuntu-latest,latest,latest-ubuntu" >> $GITHUB_OUTPUT
          else
            echo "dockerfile=Dockerfile-alpine" >> $GITHUB_OUTPUT
            echo "test_cmd=npx fast --version" >> $GITHUB_OUTPUT
            echo "tags=alpine-latest,latest-alpine" >> $GITHUB_OUTPUT
          fi

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ steps.meta.outputs.dockerfile }}
          tags: |
            ${{ env.DOCKER_REPO }}:${{ steps.meta.outputs.tags }}
          outputs: type=docker
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Test Docker image
        run: |
          IFS=',' read -r first_tag _ <<< "${{ steps.meta.outputs.tags }}"
          docker run --name test-${{ matrix.name }} -d ${{ env.DOCKER_REPO }}:$first_tag
          docker exec test-${{ matrix.name }} ${{ steps.meta.outputs.test_cmd }}
          docker rm -f test-${{ matrix.name }}

      - name: Publish Docker image
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: ${{ env.DOCKER_REPO }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: ${{ steps.meta.outputs.tags }}
